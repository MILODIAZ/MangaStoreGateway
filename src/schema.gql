# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: Int!
  name: String!
  createAt: String!
  updateAt: String!
  products(limit: Int, offset: Int, minPrice: Int, maxPrice: Int, search: String, categoryId: Int): [Product]!
}

type Product {
  id: Int!
  name: String!
  publicationDate: String
  author: String
  description: String
  price: Int!
  image: String
  isBlocked: Boolean!
  isFavourite: Boolean!
  totalStock: Int!
  createAt: String!
  updateAt: String!
  categories: [Category]!
  stockItems: [StockItem]!
}

type StockItem {
  id: Int!
  branch: Branch!
  product: Product!
  createAt: String!
  updateAt: String!
  stock: Int!
}

type Branch {
  id: Int!
  name: String!
  createAt: String!
  updateAt: String!
  stockItems: [StockItem]!
}

type User {
  id: Int!
  userName: String!
  name: String!
  lastName: String!
  email: String!
}

type Order {
  id: Int!
}

type AuthResult {
  user: User!
  jwt: String
  cart: [CartItem!]
}

type orderUser {
  id: Int!
  username: String
  cart: [CartItem!]
}

type Orden {
  id: Int!
  user_id: Int!
  user: orderUser!
  items: [CartItem!]
}

type CartProduct {
  id: Int!
  name: String
}

type CartItem {
  id: Int!
  product_id: Int!
  product: CartProduct!
  quantity: Int!
  order: Int!
}

type Transaction {
  token: String
  url: String
}

type Query {
  branches: [Branch!]!
  branch(id: Int!): Branch!
  stockItems: [StockItem!]!
  stockItem(id: Int!): StockItem!
  categories: [Category!]!
  category(id: Int!): Category!
  products(limit: Int, offset: Int, minPrice: Int, maxPrice: Int, search: String, categoryId: Int): [Product!]!
  product(id: Int!): Product!
  users: [User!]!
  user(id: Int!): User!
  getOrders(userName: String!): [Orden!]!
}

type Mutation {
  createBranch(data: branchInput!): Branch!
  updateBranch(data: branchInput!, id: Int!): Branch!
  deleteBranch(id: Int!): Branch!
  createStockItem(productId: Int!, branchId: Int!): StockItem!
  updateStockItem(data: updateStockItemInput!, id: Int!): StockItem!
  deleteStockItem(id: Int!): StockItem!
  createCategory(data: categoryInput!): Category!
  updateCategory(data: categoryInput!, id: Int!): Category!
  deleteCategory(id: Int!): Category!
  addProductToCategory(categoryId: Int!, productId: Int!): Product!
  removeProductFromCategory(categoryId: Int!, productId: Int!): Product!
  createProduct(data: createProductInput!): Product!
  updateProduct(data: updateProductInput!, id: Int!, productName: String!): Product!
  deleteProduct(id: Int!, productName: String!): Product!
  addCategoryToProduct(categoryId: Int!, productId: Int!): Category!
  removeCategoryFromProduct(categoryId: Int!, productId: Int!): Category!
  createProductItem(data: createProductItemInput!): String!
  updateProductItemQuantity(data: updateProductItemInput!, id: Int!): String!
  updateProductItemOrder(data: updateProductItemInput!, id: Int!): String!
  deleteProductItem(id: Int!, userName: String!): String!
  createUser(data: userDto!): User!
  updateUser(data: updateUserDto!, userName: String!): User!
  deleteUser(userName: String!): User!
  login(data: loginDto!): AuthResult!
  purchase(userName: String!, itemsIDs: [Int!]!, productNames: [productQty!]!): String!
  createTransaction(amount: Int!): Transaction!
  confirmTransaction(token: String!): String!
}

input branchInput {
  name: String!
}

input updateStockItemInput {
  stock: Float!
}

input categoryInput {
  name: String!
}

input createProductInput {
  name: String!
  description: String
  price: Int!
  image: String
  isBlocked: Boolean
  isFavourite: Boolean
}

input updateProductInput {
  name: String
  description: String
  price: Int
  image: String
  isBlocked: Boolean
  isFavourite: Boolean
}

input createProductItemInput {
  userName: String!
  productName: String!
  quantity: Int!
  orderId: Int
}

input updateProductItemInput {
  userName: String
  productName: String
  quantity: Int
  orderId: Int
}

input userDto {
  name: String!
  lastName: String!
  userName: String!
  email: String!
  password: String!
}

input updateUserDto {
  name: String
  lastName: String
  userName: String
  email: String
}

input loginDto {
  userName: String!
  password: String!
}

input productQty {
  name: String
  quantity: Int!
}